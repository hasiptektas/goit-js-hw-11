{"version":3,"file":"index.js","sources":["../src/js/main.js"],"sourcesContent":["import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst gallery = document.querySelector('.container');\nconst inputValue = document.getElementById('search-input');\nconst searchButton = document.getElementById('search-button');\n\n\nconst loadingDiv = document.createElement('span');\nloadingDiv.className = 'loader';\n//loadingDiv.textContent = 'Loading images, please wait...';\n\n\nsearchButton.addEventListener(\"click\", (e) => {\n  gallery.parentNode.insertBefore(loadingDiv, gallery); // Loading div'ini resultsDiv'in önüne ekle\n  loadingDiv.style.display = 'block';\n  delay(90000);\n  e.preventDefault();\n  const input = inputValue.value;\n  const url = `https://pixabay.com/api/?key=26694191-13f704d2e0e711d67f08fd2b2&q=${input}&image_type=photo&orientation=horizontal&safesearch=true`;\n  gallery.innerHTML = '';\n  \n  \n  fetch(url)\n    .then(response => response.json())\n    .then(data => {\n\n      if (data.hits.length === 0) {\n        iziToast.error({\n          message: \"Sorry, there are no images matching your search query. Please try again!\",\n          position: 'topRight',\n        })\n      }\n      \n      const pixabay = data.hits.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) => \n        `<div class=\"item\">\n        <a href=\"${largeImageURL}\">\n        <img\n          class=\"gallery-image\"\n          src=\"${webformatURL}\"\n          alt=\"${tags}\"\n        />\n        <div class=\"info\">\n          <p class=\"info-item\">\n            <b>Likes <br/> ${likes}</b>\n          </p>\n          <p class=\"info-item\">\n            <b>Views <br/> ${views}</b>\n          </p>\n          <p class=\"info-item\">\n            <b>Comments <br/> ${comments}</b>\n          </p>\n          <p class=\"info-item\">\n            <b>Downloads <br/> ${downloads}</b>\n          </p>\n        </div>\n        </a>\n        </div>`\n      ).join('');\n      \n      gallery.insertAdjacentHTML('beforeend', pixabay);\n      delay(90000);\n      loadingDiv.style.display = 'none';\n      box.refresh();\n    }).catch(error => {\n      console.error('Hata oluştu:', error);\n    });\n  \n  });\n\n\n  \n\n\n  let box = new SimpleLightbox('.container a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n    captionPosition: 'bottom',\n  })\n\n  function delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}"],"names":["gallery","inputValue","searchButton","loadingDiv","e","delay","url","response","data","iziToast","pixabay","webformatURL","largeImageURL","tags","likes","views","comments","downloads","box","error","SimpleLightbox","ms","resolve"],"mappings":"6vBAOA,MAAMA,EAAU,SAAS,cAAc,YAAY,EAC7CC,EAAa,SAAS,eAAe,cAAc,EACnDC,EAAe,SAAS,eAAe,eAAe,EAGtDC,EAAa,SAAS,cAAc,MAAM,EAChDA,EAAW,UAAY,SAIvBD,EAAa,iBAAiB,QAAUE,GAAM,CAC5CJ,EAAQ,WAAW,aAAaG,EAAYH,CAAO,EACnDG,EAAW,MAAM,QAAU,QAC3BE,EAAM,GAAK,EACXD,EAAE,eAAc,EAEhB,MAAME,EAAM,qEADEL,EAAW,KAC6D,2DACtFD,EAAQ,UAAY,GAGpB,MAAMM,CAAG,EACN,KAAKC,GAAYA,EAAS,MAAM,EAChC,KAAKC,GAAQ,CAERA,EAAK,KAAK,SAAW,GACvBC,EAAS,MAAM,CACb,QAAS,2EACT,SAAU,UACpB,CAAS,EAGH,MAAMC,EAAUF,EAAK,KAAK,IAAI,CAAC,CAAC,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAClG;AAAA,mBACWL,CAAa;AAAA;AAAA;AAAA,iBAGfD,CAAY;AAAA,iBACZE,CAAI;AAAA;AAAA;AAAA;AAAA,6BAIQC,CAAK;AAAA;AAAA;AAAA,6BAGLC,CAAK;AAAA;AAAA;AAAA,gCAGFC,CAAQ;AAAA;AAAA;AAAA,iCAGPC,CAAS;AAAA;AAAA;AAAA;AAAA,eAK1C,EAAQ,KAAK,EAAE,EAETjB,EAAQ,mBAAmB,YAAaU,CAAO,EAC/CL,EAAM,GAAK,EACXF,EAAW,MAAM,QAAU,OAC3Be,EAAI,QAAO,CACjB,CAAK,EAAE,MAAMC,GAAS,CAChB,QAAQ,MAAM,eAAgBA,CAAK,CACzC,CAAK,CAEL,CAAG,EAMD,IAAID,EAAM,IAAIE,EAAe,eAAgB,CAC3C,aAAc,MACd,aAAc,IACd,gBAAiB,QACrB,CAAG,EAED,SAASf,EAAMgB,EAAI,CACjB,OAAO,IAAI,QAAQC,GAAW,WAAWA,EAASD,CAAE,CAAC,CACzD"}